{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-0381501024567ace.js","src/display/base/Clickable.ts","node_modules/@parcel/runtime-js/lib/runtime-3f4f57102a839115.js","node_modules/@parcel/runtime-js/lib/runtime-cc92526ad8180936.js","node_modules/@parcel/runtime-js/lib/runtime-b3dfdee2104212d9.js","node_modules/@parcel/runtime-js/lib/runtime-3ae8c20d9323dcde.js","node_modules/@parcel/runtime-js/lib/runtime-06ca3b3ecdc4c8a2.js","node_modules/@parcel/runtime-js/lib/runtime-b7d84a3dd6bbe0b3.js","node_modules/@parcel/runtime-js/lib/runtime-30cd230a1ac4ee98.js","node_modules/@parcel/runtime-js/lib/runtime-eb8c2b9ee0b27a98.js","node_modules/@parcel/runtime-js/lib/runtime-73f8f77605181507.js","node_modules/@parcel/runtime-js/lib/runtime-a010474c8fa354f0.js","node_modules/@parcel/runtime-js/lib/runtime-d4958aa94a1ef1ae.js","src/display/manager/ImageManager.ts","src/game/components/Character.ts","src/assets/scripts.json","src/game/Game.ts","node_modules/@swc/helpers/src/_apply_decorated_descriptor.js","src/display/base/Flippable.ts","src/display/decorators/pushPop.ts","src/display/base/Hidable.ts","src/display/base/Sprite.ts","src/display/utils/easeFunctions.ts","src/display/base/TransitionBase.ts","src/display/base/Transitionable.ts","src/display/base/Movable.ts","src/display/base/Rotatable.ts","src/display/components/CardSide.ts","src/display/components/QuestionSide.ts","src/display/components/ResultSide.ts","src/display/components/BackSide.ts","src/display/components/QuestionCard.ts","src/display/components/CharacterSide.ts","src/display/components/CharacterEndSide.ts","src/display/components/CharacterCard.ts","src/display/components/ScoreSide.ts","src/display/components/ScoreCard.ts","src/display/components/AnswerSide.ts","src/display/components/AnswerCard.ts","src/display/manager/LayoutManager.ts","src/sketch.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"qJi4E\\\":\\\"index.24b9262c.js\\\",\\\"ihrEv\\\":\\\"background.8086dd7e.png\\\",\\\"aV8hK\\\":\\\"card_back.dc0028f7.png\\\",\\\"eBEDV\\\":\\\"card_question.ddf83312.png\\\",\\\"bHSwl\\\":\\\"card_result.65b624de.png\\\",\\\"fQyhy\\\":\\\"character_end.20c94bd8.png\\\",\\\"1T4Bt\\\":\\\"designer.05e93718.png\\\",\\\"lHsfF\\\":\\\"developer.919c361c.png\\\",\\\"dPDEn\\\":\\\"pm.1963c7be.png\\\",\\\"sAvWb\\\":\\\"score.24868ea4.png\\\",\\\"iOXqC\\\":\\\"answer_left.2b8b42b5.png\\\",\\\"d6SRG\\\":\\\"answer_right.c8bae2b7.png\\\"}\"));","import Movable from \"./Movable\";\n\ntype Constructor = new (...args: any[]) => Movable;\n\nfunction Clickable<TBase extends Constructor>(Base: TBase) {\n  return class Clickable extends Base {\n    protected position() {\n      super.position();\n      rectMode(CENTER);\n    }\n\n    display() {\n      super.display();\n    }\n\n    private isInside(x: number, y: number) {\n      x -= width / 2;\n      y -= height / 2;\n      const halfWidth = this.width / 2;\n      const halfHeight = this.height / 2;\n      return (\n        x >= this.x - halfWidth &&\n        x <= this.x + halfWidth &&\n        y >= this.y - halfHeight &&\n        y <= this.y + halfHeight\n      );\n    }\n\n    isHovered() {\n      return this.isInside(mouseX, mouseY);\n    }\n\n    isHoveredBefore() {\n      return this.isInside(pmouseX, pmouseY);\n    }\n\n    onHover() {\n      // noop\n    }\n\n    onHoverOut() {\n      // noop\n    }\n\n    onClick() {\n      // noop\n    }\n  };\n}\n\ntype ManagedClickable = {\n  isHovered(): boolean;\n  isHoveredBefore(): boolean;\n  onHover(): void;\n  onHoverOut(): void;\n  onClick(): void;\n};\n\nexport class ClickableManager {\n  private static clickables: ManagedClickable[] = [];\n\n  static add(clickable: ManagedClickable) {\n    this.clickables.push(clickable);\n  }\n\n  static remove(clickable: ManagedClickable) {\n    this.clickables = this.clickables.filter((v) => v !== clickable);\n  }\n\n  static listenHover() {\n    for (const clickable of this.clickables) {\n      if (clickable.isHovered() && !clickable.isHoveredBefore()) {\n        clickable.onHover();\n      } else if (!clickable.isHovered() && clickable.isHoveredBefore()) {\n        clickable.onHoverOut();\n      }\n    }\n  }\n\n  static listenClick() {\n    for (const clickable of this.clickables) {\n      if (clickable.isHovered()) {\n        clickable.onClick();\n      }\n    }\n  }\n}\n\nexport default Clickable;\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"ihrEv\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"aV8hK\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"eBEDV\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"bHSwl\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"fQyhy\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"1T4Bt\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"lHsfF\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"dPDEn\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"sAvWb\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"iOXqC\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"d6SRG\")).toString();","import { Image } from \"p5\";\nimport background from \"/src/assets/images/background.png\";\nimport cardBack from \"/src/assets/images/card_back.png\";\nimport cardQuestion from \"/src/assets/images/card_question.png\";\nimport cardResult from \"/src/assets/images/card_result.png\";\nimport characterEnd from \"/src/assets/images/character_end.png\";\nimport designer from \"/src/assets/images/designer.png\";\nimport developer from \"/src/assets/images/developer.png\";\nimport pm from \"/src/assets/images/pm.png\";\nimport score from \"/src/assets/images/score.png\";\nimport answerLeft from \"/src/assets/images/answer_left.png\";\nimport answerRight from \"/src/assets/images/answer_right.png\";\n\nclass ImageManager {\n  static background: Image;\n  static cardBack: Image;\n  static cardQuestion: Image;\n  static cardResult: Image;\n  static characterEnd: Image;\n  static designer: Image;\n  static developer: Image;\n  static pm: Image;\n  static score: Image;\n  static answerLeft: Image;\n  static answerRight: Image;\n\n  static init() {\n    this.background = loadImage(background);\n    this.cardBack = loadImage(cardBack);\n    this.cardQuestion = loadImage(cardQuestion);\n    this.cardResult = loadImage(cardResult);\n    this.characterEnd = loadImage(characterEnd);\n    this.designer = loadImage(designer);\n    this.developer = loadImage(developer);\n    this.pm = loadImage(pm);\n    this.score = loadImage(score);\n    this.answerLeft = loadImage(answerLeft);\n    this.answerRight = loadImage(answerRight);\n  }\n}\n\nexport default ImageManager;\n","class Character {\n  name: string;\n  burden = 0;\n  burdenLimit: number;\n\n  constructor(name: string, burdenLimit: number) {\n    this.name = name;\n    this.burdenLimit = burdenLimit;\n  }\n\n  addBurden(amount: number) {\n    this.burden = Math.max(0, Math.min(this.burden + amount, this.burdenLimit));\n    if (this.burden >= this.burdenLimit) {\n      this.onRetireGame();\n      this.onRetireLayout();\n    }\n  }\n\n  resetBurden() {\n    const prevBurden = this.burden;\n    this.burden = 0;\n    this.onResetLayout(prevBurden >= this.burdenLimit);\n  }\n\n  onRetireGame() {\n    // noop\n  }\n\n  onRetireLayout() {\n    // noop\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onResetLayout(restart: boolean) {\n    // noop\n  }\n}\n\nexport default Character;\n","{\n  \"intro\": [\n    {\n      \"emoji\": \"👇\",\n      \"text\": \"여기를 클릭해 보시겠어요?\"\n    },\n    {\n      \"emoji\": \"🙋\",\n      \"text\": \"안녕하세요.\"\n    },\n    {\n      \"emoji\": \"🙌\",\n      \"text\": \"극한팀플에 오신 걸 환영해요.\"\n    },\n    {\n      \"emoji\": \"🧑‍💻\",\n      \"text\": \"당신은 이름 모를 정문과 수업을 듣게 되었습니다.\"\n    },\n    {\n      \"emoji\": \"👥\",\n      \"text\": \"왼쪽 위에 같이 팀플할 조원들이 보이네요.\",\n      \"preEffects\": [\"showCharacters\"]\n    },\n    {\n      \"emoji\": \"😙\",\n      \"text\": \"저기 개발자에게 가서 인사해 볼까요?\",\n      \"answers\": [\n        {\n          \"text\": \"이 버튼 1px만 옮겨주시면 안 돼요?\",\n          \"result\": \"개발자가 힘들어합니다.\",\n          \"targets\": [\"developer\"],\n          \"burdenAmount\": 1\n        },\n        {\n          \"text\": \"이 버그 내일까지 고쳐주실 수 있을까요?\",\n          \"result\": \"개발자가 힘들어합니다.\",\n          \"targets\": [\"developer\"],\n          \"burdenAmount\": 1\n        }\n      ]\n    },\n    {\n      \"emoji\": \"😰\",\n      \"text\": \"앗... 친근한 인사였다고 생각했는데 아니었군요.\"\n    },\n    {\n      \"emoji\": \"💁\",\n      \"text\": \"어떤 선택을 하느냐에 따라 캐릭터의 힘듦 지수가 올라갈 수 있어요.\"\n    },\n    {\n      \"emoji\": \"💨\",\n      \"text\": \"힘듦 지수가 5점을 넘어가면 탈주할 수 있으니 주의하세요.\"\n    },\n    {\n      \"emoji\": \"👏\",\n      \"text\": \"팀원들의 탈주를 막으면서 15일 동안 팀플을 진행하면 당신의 승리입니다.\",\n      \"preEffects\": [\"showScore\"]\n    },\n    {\n      \"emoji\": \"🥰\",\n      \"text\": \"그럼 시작합니다.\",\n      \"preEffects\": [\"startMain\"],\n      \"postEffects\": [\"reset\", \"countScore\"]\n    }\n  ],\n  \"main\": [\n    {\n      \"emoji\": \"💡\",\n      \"text\": \"내일이 발표인데, 개발자가 피그마로 보여주기로 한 프로토타입을 웹으로 만들면 어떻겠냐고 한다.\",\n      \"answers\": [\n        {\n          \"text\": \"하고 싶으면 하세요.\",\n          \"result\": \"당연히 완성 못했다. 버그 엄청 많아!\",\n          \"targets\": [\"developer\"],\n          \"burdenAmount\": 3\n        },\n        {\n          \"text\": \"개발자님이 너무 힘들지 않을까요?\",\n          \"result\": \"현명한 선택이었다.\"\n        }\n      ]\n    },\n    {\n      \"emoji\": \"🍨\",\n      \"text\": \"밤샘 팀플하다가 간식을 사와서 나눠먹기로 했다. 배스킨라빈스에 간 조장. 어떤 맛을 골라야 할까?\",\n      \"answers\": [\n        {\n          \"text\": \"체리 쥬빌레\",\n          \"result\": \"개발자가 핑크색 부분에는 손을 대지 않는다.\",\n          \"targets\": [\"developer\"],\n          \"burdenAmount\": 1\n        },\n        {\n          \"text\": \"민트초코칩\",\n          \"result\": \"개발자가 민초만 다 먹었다.\",\n          \"targets\": [\"developer\"],\n          \"burdenAmount\": -3\n        }\n      ]\n    },\n    {\n      \"emoji\": \"🤷\",\n      \"text\": \"발표 직전에 게임이 끝나지 않는 버그가 발견됐다. 개발자에게 이 버그를 제보하니 자기 컴퓨터에서는 괜찮다는데...\",\n      \"answers\": [\n        {\n          \"text\": \"개발자님이 화면 공유해서 발표해 주세요.\",\n          \"result\": \"코드 설명에 발표 시간을 다 써 버렸다.\",\n          \"targets\": [\"pm\", \"designer\"],\n          \"burdenAmount\": 2\n        },\n        {\n          \"text\": \"기획자님 컴퓨터에서도 같은 버그가 나요.\",\n          \"result\": \"버그 맞네 맞아. 고치러 가자.\",\n          \"targets\": [\"developer\"],\n          \"burdenAmount\": 2\n        }\n      ]\n    },\n    {\n      \"emoji\": \"⚖️\",\n      \"text\": \"다음 주 회의 일정을 잡아보니 모두가 참가할 수 있는 날이 없다. 딱 한 명을 제외해야 한다면...\",\n      \"answers\": [\n        {\n          \"text\": \"디자이너\",\n          \"result\": \"기획은 했는데 디자인에 하나도 반영할 수가 없었다.\",\n          \"targets\": [\"designer\"],\n          \"burdenAmount\": 1\n        },\n        {\n          \"text\": \"개발자\",\n          \"result\": \"아 그럼 저는 코딩하고 있을게요.\"\n        }\n      ]\n    },\n    {\n      \"emoji\": \"🤖\",\n      \"text\": \"회의 중 갑자기 파이썬의 언어적 특성에 대해 설명하기 시작하는 개발자. 반응해 줄까 말까?\",\n      \"answers\": [\n        {\n          \"text\": \"아 저도 파이썬 배워봤어요.\",\n          \"result\": \"개발자가 너무 신나서 파이썬 레퍼런스를 띄우기 시작했다.\",\n          \"targets\": [\"pm\", \"designer\"],\n          \"burdenAmount\": 1\n        },\n        {\n          \"text\": \"그게 p5.js랑 다른 건가요?\",\n          \"result\": \"개발자가 p5.js는 라이브러리고 파이썬은 언어라고 하는데 솔직히 이해 못했다.\",\n          \"targets\": [\"developer\"],\n          \"burdenAmount\": 1\n        }\n      ]\n    },\n    {\n      \"emoji\": \"💻\",\n      \"text\": \"밤샘하는 것도 아닌데 갑자기 대면 팀플이 필요하다고 하는 기획자. 대면 팀플 한 번 할까?\",\n      \"answers\": [\n        {\n          \"text\": \"한번쯤 만나면 좋지.\",\n          \"result\": \"팀플 장소에 확진자가 다녀갔다고 해서 모두 선별진료소에 다녀왔다.\",\n          \"targets\": [\"designer\", \"developer\"],\n          \"burdenAmount\": 2\n        },\n        {\n          \"text\": \"대면은 다음에 하죠.\",\n          \"result\": \"대면을 해야 기획 리뷰를 개발자가 들어줄 것 같다나 뭐라나.\",\n          \"targets\": [\"pm\"],\n          \"burdenAmount\": 1\n        }\n      ]\n    },\n    {\n      \"emoji\": \"🍪\",\n      \"text\": \"밤샘 팀플하다가 간식을 사와서 나눠먹기로 했다. 편의점에 간 조장. 어떤 과자를 골라야 할까?\",\n      \"answers\": [\n        {\n          \"text\": \"꼬북칩 콘소메맛\",\n          \"result\": \"기획자가 과자 봉지만 물끄러미 보고 있다.\",\n          \"targets\": [\"pm\"],\n          \"burdenAmount\": 1\n        },\n        {\n          \"text\": \"꼬북칩 초코츄러스맛\",\n          \"result\": \"기획자님 식사 안 하신 거 아니죠?\",\n          \"targets\": [\"pm\"],\n          \"burdenAmount\": -2\n        }\n      ]\n    },\n    {\n      \"emoji\": \"✍️\",\n      \"text\": \"퍼소나를 한 번 만들어보면 좋겠다는 기획자. 음 하면 좋지만... 우리 결과물에 투머치인 것 같기도 하고.\",\n      \"answers\": [\n        {\n          \"text\": \"기획자님이 한번 만들어 주세요.\",\n          \"result\": \"갑자기 기획자가 사용자 조사 계획까지 내놓기 시작했다.\",\n          \"targets\": [\"pm\"],\n          \"burdenAmount\": 2\n        },\n        {\n          \"text\": \"다같이 만들어 볼까요?\",\n          \"result\": \"개발자만 카메라가 꺼져 있다. 설마 회의 중에 코딩하나?\",\n          \"targets\": [\"developer\"],\n          \"burdenAmount\": 1\n        }\n      ]\n    },\n    {\n      \"emoji\": \"😰\",\n      \"text\": \"회의 중 갑자기 어딘가에서 물소리가 들려온다. 이건 디자이너에게서 들려오는 소리 같은데...?\",\n      \"answers\": [\n        {\n          \"text\": \"디자이너님 마이크 켜져 있어요.\",\n          \"result\": \"아 식사 끝나셨다고.... 그럴 수 있지.\"\n        },\n        {\n          \"text\": \"무시하고 회의 진행한다.\",\n          \"result\": \"설거지 소리가 들려서 결국 마이크 켜져 있다고 얘기했다.\",\n          \"targets\": [\"designer\"],\n          \"burdenAmount\": 2\n        }\n      ]\n    },\n    {\n      \"emoji\": \"🍛\",\n      \"text\": \"밤샘 팀플하다가 저녁을 시키기로 했다. 배달앱을 켠 조장. 어떤 메뉴를 시켜야 할까?\",\n      \"answers\": [\n        {\n          \"text\": \"마라샹궈\",\n          \"result\": \"디자이너가 분모자 다 건져서 먹었다.\",\n          \"targets\": [\"designer\"],\n          \"burdenAmount\": -1\n        },\n        {\n          \"text\": \"바지락칼국수\",\n          \"result\": \"아 디자이너님 해산물 못 드셨었지. 깜빡했네~\",\n          \"targets\": [\"designer\"],\n          \"burdenAmount\": 2\n        }\n      ]\n    },\n    {\n      \"emoji\": \"1️⃣\",\n      \"text\": \"결과물 UI를 보고 갑자기 정렬이 맞지 않다고 하는 디자이너. 어디는 7px씩, 어디는 9px씩 띄워야 한다는데...\",\n      \"answers\": [\n        {\n          \"text\": \"제 눈에는 똑같이 생겼는데요?\",\n          \"result\": \"그쵸... 똑같죠...? 하지만 디자이너는 의기소침해 보인다.\",\n          \"targets\": [\"designer\"],\n          \"burdenAmount\": 2\n        },\n        {\n          \"text\": \"개발자님 이거 대응해 주실 수 있어요?\",\n          \"result\": \"개발자님 한숨을 들은 것 같은데... 줌이 끊겼나...\",\n          \"targets\": [\"developer\"],\n          \"burdenAmount\": 1\n        }\n      ]\n    },\n    {\n      \"emoji\": \"🎶\",\n      \"text\": \"지금은 오전 3시. 길어지는 프로토타입 구현에 다들 눈이 감겨온다. 음악이라도 하나 틀어볼까?\",\n      \"answers\": [\n        {\n          \"text\": \"스타벅스 매장 음악 3시간\",\n          \"result\": \"모두 사이렌오더 시켜놓은 것처럼 열심히 일했다.\",\n          \"targets\": [\"pm\", \"designer\", \"developer\"],\n          \"burdenAmount\": -1\n        },\n        {\n          \"text\": \"코딩하기 좋은 음악 3시간\",\n          \"result\": \"개발자가 신경도 쓰지 않는다. 코딩하면 음악이 안 들리나.\"\n        }\n      ]\n    },\n    {\n      \"emoji\": \"🕖\",\n      \"text\": \"저녁 7시 회의에 다들 5~10분씩 늦는다고 한다. 일찍 회의하고 일찍 자는 게 좋을 것 같은데...\",\n      \"answers\": [\n        {\n          \"text\": \"그럼 7시 반에 시작하죠.\",\n          \"result\": \"여유롭게 저녁 먹고 7시 40분에 시작했다. 양치질하시라고 10분 미룸.\",\n          \"targets\": [\"pm\", \"designer\", \"developer\"],\n          \"burdenAmount\": -1\n        },\n        {\n          \"text\": \"먼저 회의할 테니 천천히 들어오세요.\",\n          \"result\": \"다들 30분씩 늦어서 7시 반에 시작했다. 하튼 나만 힘들지.\"\n        }\n      ]\n    },\n    {\n      \"emoji\": \"💬\",\n      \"text\": \"기획 문서와 프로토타입, 결과물의 문구가 조금씩 다른 것 같다. 달라진 이유가 뭘까?\",\n      \"answers\": [\n        {\n          \"text\": \"디자이너님이 맞춤법 장인이라~\",\n          \"result\": \"기획자는 반박하고 싶었지만 맞춤법을 반박할 수는 없었다.\",\n          \"targets\": [\"developer\"],\n          \"burdenAmount\": -1\n        },\n        {\n          \"text\": \"개발자가 폰트 크기에 맞추다보니~\",\n          \"result\": \"격렬한 논의 끝에 폰트 크기를 바꾸기로 했다.\",\n          \"targets\": [\"designer\"],\n          \"burdenAmount\": 2\n        }\n      ]\n    },\n    {\n      \"emoji\": \"🛠\",\n      \"text\": \"디자이너가 프로토타입은 어떤 툴로 만들면 좋을지 물어본다. 내심 기대하는 답이 있는 것 같은데...\",\n      \"answers\": [\n        {\n          \"text\": \"그냥 구글 슬라이드로 하죠.\",\n          \"result\": \"아 이거 한글 폰트가 없네. 누가 이런 선택을 했죠?\",\n          \"targets\": [\"designer\"],\n          \"burdenAmount\": 1\n        },\n        {\n          \"text\": \"피그마? 뭔지 모르겠지만 써 봅시다.\",\n          \"result\": \"디자이너의 커서가 홍길동처럼 움직인다.\",\n          \"targets\": [\"designer\"],\n          \"burdenAmount\": -2\n        }\n      ]\n    }\n  ],\n  \"outro\": [\n    {\n      \"emoji\": \"🥳\",\n      \"text\": \"뭔가 엄청난 것을 만들었다. 이거 팔아도 될 것 같은데?\"\n    },\n    {\n      \"emoji\": \"🙌\",\n      \"text\": \"기말 발표를 마치고 다들 톡방에 눈물과 환희의 이모티콘들을 보낸다.\"\n    },\n    {\n      \"emoji\": \"🥰\",\n      \"text\": \"다들 고생 많았어요. 그리고 누구신지는 모르겠지만... 저희 팀플을 도와주셔서 감사합니다.\"\n    },\n    {\n      \"emoji\": \"😏\",\n      \"text\": \"새벽 3시에 스크립트를 쓰는 지금... 저도 개인 프로젝트 말고 팀플하고 싶네요.\"\n    },\n    {\n      \"emoji\": \"👋\",\n      \"text\": \"극한팀플은 여기까지입니다. 감사합니다. 게임 오버입니다.\"\n    }\n  ],\n  \"interlude1\": [\n    {\n      \"emoji\": \"🤔\",\n      \"text\": \"이런... 팀플이 폭파되었군요.\"\n    },\n    {\n      \"emoji\": \"🤗\",\n      \"text\": \"하지만 기죽지 마세요. 정문과에서 이런 고생길은 숱하게 열리는 것 아니겠어요?\"\n    },\n    {\n      \"emoji\": \"🏃\",\n      \"text\": \"당신은 다음 학기에도 이름 모를 정문과 수업을 듣고, 팀플을 하게 됩니다.\"\n    },\n    {\n      \"emoji\": \"🙋\",\n      \"text\": \"안녕하세요. 어디서 많이 본 팀 구성인데... 저희 다시 시작해 볼까요?\",\n      \"preEffects\": [\"startMain\"],\n      \"postEffects\": [\"addTryCount\", \"reset\", \"countScore\"]\n    }\n  ],\n  \"interlude2\": [\n    {\n      \"emoji\": \"👀\",\n      \"text\": \"또 팀플이 터졌군요.\"\n    },\n    {\n      \"emoji\": \"🤗\",\n      \"text\": \"걱정하지 마세요. 들어야 하는 정문과 수업이 많다면, 팀플을 할 기회도 많이 남았습니다.\"\n    },\n    {\n      \"emoji\": \"🏃\",\n      \"text\": \"당신은 다음 학기에도 이름 모를 정문과 수업을 듣게 됩니다. 시작해 볼까요?\",\n      \"preEffects\": [\"startMain\"],\n      \"postEffects\": [\"addTryCount\", \"reset\", \"countScore\"]\n    }\n  ],\n  \"interlude3\": [\n    {\n      \"emoji\": \"😌\",\n      \"text\": \"3학기 내리 팀플이 터졌군요. 그럴 수 있죠.\"\n    },\n    {\n      \"emoji\": \"🥱\",\n      \"text\": \"당신은 다음 학기에도 이름 모를 정문과 수업을 듣고... 하품해서 미안해요. 시작해 볼까요?\",\n      \"preEffects\": [\"startMain\"],\n      \"postEffects\": [\"addTryCount\", \"reset\", \"countScore\"]\n    }\n  ],\n  \"interlude4\": [\n    {\n      \"emoji\": \"🧐\",\n      \"text\": \"......\"\n    },\n    {\n      \"emoji\": \"😅\",\n      \"text\": \"아 죄송해요. 팀플마다 왜 저렇게 끝나는지 모르겠어서... 특이한 경험을 하고 계시네요. 가시죠.\",\n      \"preEffects\": [\"startMain\"],\n      \"postEffects\": [\"addTryCount\", \"reset\", \"countScore\"]\n    }\n  ],\n  \"interlude5\": [\n    {\n      \"emoji\": \"😇\",\n      \"text\": \"이번 학기도 아쉽게 됐네요.\"\n    },\n    {\n      \"emoji\": \"🤠\",\n      \"text\": \"뭐 어쩔 수 없죠. 졸업은 해야 하지 않겠습니까. 다음 학기에는 운이 좋기를 바라볼까요?\",\n      \"preEffects\": [\"startMain\"],\n      \"postEffects\": [\"addTryCount\", \"reset\", \"countScore\"]\n    }\n  ],\n  \"pmBadEnding\": {\n    \"emoji\": \"🍃\",\n    \"text\": \"기획자는 연락이 두절되었고 그 후로 정문과 수업에서 기획자님을 다시 볼 수 없었습니다.\",\n    \"preEffects\": [\"stopCountScore\", \"startInterlude\"]\n  },\n  \"designerBadEnding\": {\n    \"emoji\": \"🍃\",\n    \"text\": \"디자이너는 연락이 두절되었고 그 후로 정문과 수업에서 디자이너님을 다시 볼 수 없었습니다.\",\n    \"preEffects\": [\"stopCountScore\", \"startInterlude\"]\n  },\n  \"developerBadEnding\": {\n    \"emoji\": \"🍃\",\n    \"text\": \"개발자는 연락이 두절되었고 그 후로 정문과 수업에서 개발자님을 다시 볼 수 없었습니다.\",\n    \"preEffects\": [\"stopCountScore\", \"startInterlude\"]\n  }\n}\n","import Character from \"./components/Character\";\nimport { Question, Target } from \"../types/GameType\";\nimport scripts from \"../assets/scripts.json\";\n\nclass Game {\n  static pm = new Character(\"기획자\", 5);\n  static designer = new Character(\"디자이너\", 5);\n  static developer = new Character(\"개발자\", 5);\n  static questions: Question[] = [];\n  static cursor = 0;\n  static tryCount = 1;\n  static score = 1;\n  static countScore = false;\n\n  static init() {\n    this.pm.onRetireGame = () => {\n      this.startBadEnding(scripts.pmBadEnding);\n    };\n    this.designer.onRetireGame = () => {\n      this.startBadEnding(scripts.designerBadEnding);\n    };\n    this.developer.onRetireGame = () => {\n      this.startBadEnding(scripts.developerBadEnding);\n    };\n  }\n\n  static startBadEnding(badEnding: Question) {\n    this.questions = [...this.questions.slice(0, Game.cursor + 1), badEnding];\n    this.onCardPush();\n  }\n\n  static startIntro() {\n    this.questions = [...this.questions, ...scripts.intro];\n    this.onCardPush();\n  }\n\n  static startMain() {\n    const main = shuffle(scripts.main);\n    if (main.length > 0) {\n      const lastQuestion = main[main.length - 1];\n      main[main.length - 1] = {\n        ...lastQuestion,\n        preEffects: [\"startOutro\", \"stopCountScore\"],\n      };\n    }\n    this.questions = [...this.questions, ...main];\n    this.onCardPush();\n  }\n\n  static startOutro() {\n    this.questions = [...this.questions, ...scripts.outro];\n    this.onCardPush();\n  }\n\n  static startInterlude() {\n    let interlude: Question[];\n\n    switch (this.tryCount) {\n      case 1:\n        interlude = scripts.interlude1;\n        break;\n      case 2:\n        interlude = scripts.interlude2;\n        break;\n      case 3:\n        interlude = scripts.interlude3;\n        break;\n      case 4:\n        interlude = scripts.interlude4;\n        break;\n      default:\n        interlude = scripts.interlude5;\n        break;\n    }\n\n    this.questions = [...this.questions, ...interlude];\n    this.onCardPush();\n  }\n\n  static startCountScore() {\n    this.countScore = true;\n  }\n\n  static stopCountScore() {\n    this.countScore = false;\n  }\n\n  static reset() {\n    this.pm.resetBurden();\n    this.designer.resetBurden();\n    this.developer.resetBurden();\n    this.score = 1;\n  }\n\n  static addTryCount() {\n    this.tryCount += 1;\n  }\n\n  static pickNext() {\n    this.cursor = Math.min(this.cursor + 1, this.questions.length - 1);\n    if (this.countScore) {\n      this.score += 1;\n    }\n  }\n\n  static applyBurden(targets: Target[], amount: number) {\n    for (const target of targets) {\n      switch (target) {\n        case \"pm\":\n          this.pm.addBurden(amount);\n          break;\n        case \"designer\":\n          this.designer.addBurden(amount);\n          break;\n        case \"developer\":\n          this.developer.addBurden(amount);\n          break;\n      }\n    }\n  }\n\n  static onCardPush() {\n    // noop\n  }\n}\n\nexport default Game;\n","export default function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator ? (decorator(target, property, desc) || desc) : desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n","import Transitionable from \"./Transitionable\";\n\ntype Constructor = new (...args: any[]) => Transitionable;\n\ntype Side = \"FRONT\" | \"BACK\";\ntype Direction = \"LEFT\" | \"RIGHT\" | \"TOP\" | \"BOTTOM\";\n\nfunction Flippable<TBase extends Constructor>(Base: TBase) {\n  return class Flippable extends Base {\n    private fXBase = this.getNewTransitionBase();\n    private fYBase = this.getNewTransitionBase();\n    side: Side = \"FRONT\";\n\n    protected position() {\n      super.position();\n      rectMode(CENTER);\n      const xValue = this.fXBase.getValue();\n      const yValue = this.fYBase.getValue();\n      const xBump = Math.abs(Math.sin(xValue * PI)) * (this.height / 2);\n      const yBump = Math.abs(Math.sin(yValue * PI)) * (this.width / 2);\n      translate(0, 0, Math.max(xBump, yBump));\n      rotateX(xValue * PI);\n      rotateY(yValue * PI);\n    }\n\n    display() {\n      super.display();\n      this.fXBase.move();\n      this.fYBase.move();\n    }\n\n    flip(direction: Direction, transition = true) {\n      switch (direction) {\n        case \"LEFT\":\n          this.fYBase.setAmount(-1, transition);\n          break;\n        case \"RIGHT\":\n          this.fYBase.setAmount(1, transition);\n          break;\n        case \"TOP\":\n          this.fXBase.setAmount(1, transition);\n          break;\n        case \"BOTTOM\":\n          this.fXBase.setAmount(-1, transition);\n          break;\n      }\n\n      this.side = this.side === \"FRONT\" ? \"BACK\" : \"FRONT\";\n    }\n  };\n}\n\nexport default Flippable;\n","function pushPop(\n  target: unknown,\n  propertykey: string,\n  descriptor: TypedPropertyDescriptor<(...args: unknown[]) => unknown>\n) {\n  const original = descriptor.value;\n\n  descriptor.value = function (...args) {\n    if (original) {\n      push();\n      const result = original.apply(this, args);\n      pop();\n\n      return result;\n    }\n  };\n}\n\nexport default pushPop;\n","import Movable from \"./Movable\";\n\ntype Constructor = new (...args: any[]) => Movable;\n\ntype Direction = \"LEFT\" | \"RIGHT\" | \"TOP\" | \"BOTTOM\";\n\nfunction Hidable<TBase extends Constructor>(Base: TBase) {\n  return class Hideable extends Base {\n    private hXBase = this.getNewTransitionBase();\n    private hYBase = this.getNewTransitionBase();\n    private xMargin = 10;\n    private yMargin = 10;\n\n    protected position() {\n      super.position();\n      const xValue = this.hXBase.getValue();\n      const yValue = this.hYBase.getValue();\n      const xOffset = xValue > 0 ? -this.x : this.x;\n      const yOffset = yValue > 0 ? -this.y : this.y;\n      const x = xValue * (width / 2 + this.width / 2 + this.xMargin + xOffset);\n      const y =\n        yValue * (height / 2 + this.height / 2 + this.yMargin + yOffset);\n      translate(x, y);\n    }\n\n    display() {\n      super.display();\n      this.hXBase.move();\n      this.hYBase.move();\n    }\n\n    hide(direction: Direction, transition = true) {\n      switch (direction) {\n        case \"LEFT\":\n          this.hXBase.setValue(-1, transition);\n          break;\n        case \"RIGHT\":\n          this.hXBase.setAmount(1, transition);\n          break;\n        case \"TOP\":\n          this.hYBase.setAmount(-1, transition);\n          break;\n        case \"BOTTOM\":\n          this.hYBase.setAmount(1, transition);\n          break;\n      }\n    }\n\n    show(transition = true) {\n      this.hXBase.setValue(0, transition);\n      this.hYBase.setValue(0, transition);\n    }\n\n    isHiding() {\n      return (\n        Math.abs(this.hXBase.getValue()) === 1 ||\n        Math.abs(this.hYBase.getValue()) === 1\n      );\n    }\n  };\n}\n\nexport default Hidable;\n","class Sprite {\n  protected width: number;\n  protected height: number;\n\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n  }\n\n  getWidth() {\n    return this.width;\n  }\n\n  getHeight() {\n    return this.height;\n  }\n\n  protected position() {\n    // noop\n  }\n\n  display() {\n    this.position();\n  }\n}\n\nexport default Sprite;\n","// https://easings.net/ko\n\nexport function easeInExpo(x: number): number {\n  return x === 0 ? 0 : pow(2, 10 * x - 10);\n}\n\nexport function easeOutExpo(x: number): number {\n  return x === 1 ? 1 : 1 - pow(2, -10 * x);\n}\n","type EaseFunction = (x: number) => number;\n\nclass TransitionBase {\n  private value = 0;\n  private amount = 0;\n  private progress = 0;\n  private readonly speed: number;\n  private readonly ease: EaseFunction;\n\n  constructor(speed: number, ease: EaseFunction) {\n    this.speed = speed;\n    this.ease = ease;\n  }\n\n  setValue(value: number, transition: boolean) {\n    if (this.isTransitioning()) {\n      this.endTransition();\n    }\n\n    if (transition) {\n      this.amount = value - this.value;\n    } else {\n      this.value = value;\n    }\n  }\n\n  setAmount(amount: number, transition: boolean) {\n    if (this.isTransitioning()) {\n      this.endTransition();\n    }\n\n    if (transition) {\n      this.amount = amount;\n    } else {\n      this.value += amount;\n    }\n  }\n\n  getValue() {\n    return this.value + this.amount * this.ease(this.progress);\n  }\n\n  isTransitioning() {\n    return this.amount !== 0;\n  }\n\n  move() {\n    if (this.amount !== 0) {\n      if (this.progress < 1) {\n        this.progress = Math.min(this.progress + this.speed, 1);\n      } else {\n        this.endTransition();\n      }\n    }\n  }\n\n  endTransition() {\n    this.value += this.amount;\n    this.amount = 0;\n    this.progress = 0;\n  }\n}\n\nexport default TransitionBase;\n","import Sprite from \"./Sprite\";\nimport { easeOutExpo } from \"../utils/easeFunctions\";\nimport TransitionBase from \"./TransitionBase\";\n\nclass Transitionable extends Sprite {\n  protected speed = 0.015;\n  protected ease = easeOutExpo;\n\n  getNewTransitionBase() {\n    return new TransitionBase(this.speed, this.ease);\n  }\n}\n\nexport default Transitionable;\n","import Transitionable from \"./Transitionable\";\n\nclass Movable extends Transitionable {\n  private xBase = this.getNewTransitionBase();\n  private yBase = this.getNewTransitionBase();\n  private zBase = this.getNewTransitionBase();\n\n  protected get x() {\n    return this.xBase.getValue();\n  }\n\n  protected get y() {\n    return this.yBase.getValue();\n  }\n\n  protected get z() {\n    return this.zBase.getValue();\n  }\n\n  set(x: number, y: number, z: number, transition = true) {\n    this.setX(x, transition);\n    this.setY(y, transition);\n    this.setZ(z, transition);\n  }\n\n  setX(x: number, transition = true) {\n    this.xBase.setValue(x, transition);\n  }\n\n  setY(y: number, transition = true) {\n    this.yBase.setValue(y, transition);\n  }\n\n  setZ(z: number, transition = true) {\n    this.zBase.setValue(z, transition);\n  }\n\n  move(x: number, y: number, z: number, transition = true) {\n    this.moveX(x, transition);\n    this.moveY(y, transition);\n    this.moveZ(z, transition);\n  }\n\n  moveX(xAmount: number, transition = true) {\n    this.xBase.setAmount(xAmount, transition);\n  }\n\n  moveY(yAmount: number, transition = true) {\n    this.yBase.setAmount(yAmount, transition);\n  }\n\n  moveZ(zAmount: number, transition = true) {\n    this.zBase.setAmount(zAmount, transition);\n  }\n\n  protected position() {\n    super.position();\n    translate(\n      this.xBase.getValue(),\n      this.yBase.getValue(),\n      this.zBase.getValue()\n    );\n  }\n\n  display() {\n    super.display();\n    this.xBase.move();\n    this.yBase.move();\n    this.zBase.move();\n  }\n}\n\nexport default Movable;\n","import Transitionable from \"./Transitionable\";\n\ntype Constructor = new (...args: any[]) => Transitionable;\n\nfunction Rotatable<TBase extends Constructor>(Base: TBase) {\n  return class Rotatable extends Base {\n    private rYBase = this.getNewTransitionBase();\n\n    setYRotate(y: number, transition = true) {\n      this.rYBase.setValue(y, transition);\n    }\n\n    protected position() {\n      super.position();\n      rotateY(this.rYBase.getValue());\n    }\n\n    display() {\n      super.display();\n      this.rYBase.move();\n    }\n  };\n}\n\nexport default Rotatable;\n","import { Graphics } from \"p5\";\n\nabstract class CardSide {\n  readonly texture: Graphics;\n\n  constructor(width: number, height: number) {\n    this.texture = createGraphics(width, height);\n  }\n\n  abstract draw(): void;\n}\n\nexport default CardSide;\n","import CardSide from \"./CardSide\";\nimport ImageManager from \"../manager/ImageManager\";\n\nconst emojiSize = 30;\nconst emojiY = 40;\nconst questionLeading = 27;\nconst questionSize = 16;\nconst questionY = 90;\nconst questionPadding = 20;\n\nclass QuestionSide extends CardSide {\n  private readonly emoji: string;\n  private readonly question: string;\n\n  constructor(width: number, height: number, emoji: string, question: string) {\n    super(width, height);\n    this.emoji = emoji;\n    this.question = question;\n  }\n\n  draw() {\n    this.texture.background(ImageManager.cardQuestion);\n    this.texture.fill(0);\n    this.texture.textFont(\"Hahmlet\");\n    this.texture.textAlign(CENTER, TOP);\n    this.texture.textWrap(WORD);\n\n    if (this.emoji) {\n      this.texture.textSize(emojiSize);\n      this.texture.text(this.emoji, 3, emojiY, this.texture.width);\n    }\n\n    if (this.question) {\n      this.texture.textLeading(questionLeading);\n      this.texture.textSize(questionSize);\n      this.texture.text(\n        this.question,\n        2 + questionPadding,\n        questionY,\n        this.texture.width - 2 * questionPadding\n      );\n    }\n  }\n}\n\nexport default QuestionSide;\n","import CardSide from \"./CardSide\";\nimport ImageManager from \"../manager/ImageManager\";\n\nconst textLeading = 27;\nconst textSize = 16;\nconst textY = 90;\nconst textPadding = 20;\nconst resultY = 200;\n\nclass ResultSide extends CardSide {\n  private text?: string;\n  private result?: string;\n\n  set(text: string, result?: string) {\n    this.text = text;\n    this.result = result;\n  }\n\n  draw() {\n    this.texture.background(ImageManager.cardResult);\n    this.texture.fill(255);\n    this.texture.textFont(\"Hahmlet\");\n    this.texture.textAlign(CENTER, TOP);\n    this.texture.textLeading(textLeading);\n    this.texture.textSize(textSize);\n\n    if (this.text) {\n      this.texture.text(\n        this.text,\n        2 + textPadding,\n        textY,\n        this.texture.width - 2 * textPadding\n      );\n    }\n\n    if (this.result) {\n      this.texture.textStyle(BOLD);\n      this.texture.text(\n        this.result,\n        2 + textPadding,\n        resultY,\n        this.texture.width - 2 * textPadding\n      );\n    }\n  }\n}\n\nexport default ResultSide;\n","import CardSide from \"./CardSide\";\nimport ImageManager from \"../manager/ImageManager\";\n\nclass BackSide extends CardSide {\n  draw() {\n    this.texture.background(ImageManager.cardBack);\n  }\n}\n\nexport default BackSide;\n","import Flippable from \"../base/Flippable\";\nimport pushPop from \"../decorators/pushPop\";\nimport Hidable from \"../base/Hidable\";\nimport Movable from \"../base/Movable\";\nimport Rotatable from \"../base/Rotatable\";\nimport QuestionSide from \"./QuestionSide\";\nimport ResultSide from \"./ResultSide\";\nimport BackSide from \"./BackSide\";\nimport CardSide from \"./CardSide\";\nimport Clickable from \"../base/Clickable\";\nimport { Question } from \"../../types/GameType\";\n\nconst cardWidth = 200;\nconst cardHeight = 300;\n\nclass QuestionCard extends Clickable(Rotatable(Flippable(Hidable(Movable)))) {\n  static backSide: BackSide;\n\n  private readonly questionSide;\n  private readonly resultSide = new ResultSide(cardWidth, cardHeight);\n  private front?: CardSide;\n  private back?: CardSide;\n  question: Question;\n\n  constructor(question: Question) {\n    super(cardWidth, cardHeight);\n    this.questionSide = new QuestionSide(\n      cardWidth,\n      cardHeight,\n      question.emoji,\n      question.text\n    );\n    this.questionSide.draw();\n    this.question = question;\n\n    this.front = this.questionSide;\n  }\n\n  static initBackSide() {\n    this.backSide = new BackSide(cardWidth, cardHeight);\n    this.backSide.draw();\n  }\n\n  setResult(text: string, burdenResult?: string) {\n    this.back = this.resultSide;\n    this.resultSide.set(text, burdenResult);\n    this.resultSide.draw();\n  }\n\n  prepareBack() {\n    if (this.side === \"FRONT\") {\n      this.back = QuestionCard.backSide;\n    } else {\n      this.front = QuestionCard.backSide;\n    }\n  }\n\n  isShowingBack() {\n    return (\n      (this.side === \"FRONT\" && this.front === QuestionCard.backSide) ||\n      (this.side === \"BACK\" && this.back === QuestionCard.backSide)\n    );\n  }\n\n  @pushPop\n  display() {\n    super.display();\n    noStroke();\n\n    if (this.front) {\n      texture(this.front.texture);\n    }\n\n    translate(0, 0, -0.1);\n    rect(0, 0, this.width, this.height);\n\n    if (this.back) {\n      texture(this.back.texture);\n    }\n\n    rotateY(PI);\n    translate(0, 0, 0.1);\n    rect(0, 0, this.width, this.height);\n  }\n}\n\nexport default QuestionCard;\n","import CardSide from \"./CardSide\";\nimport { Image } from \"p5\";\nimport Character from \"../../game/components/Character\";\n\nconst emojiSize = 20;\nconst emojiY = 18;\nconst burdenEmoji = \"😤\";\n\nclass CharacterSide extends CardSide {\n  private readonly background: Image;\n  private readonly character: Character;\n\n  constructor(\n    width: number,\n    height: number,\n    background: Image,\n    character: Character\n  ) {\n    super(width, height);\n    this.background = background;\n    this.character = character;\n  }\n\n  draw() {\n    this.texture.background(this.background);\n    this.texture.fill(0);\n    this.texture.textFont(\"Hahmlet\");\n    this.texture.textAlign(CENTER, TOP);\n    this.texture.textWrap(WORD);\n\n    let emojiString = \"\";\n    for (let i = 0; i < this.character.burden; i++) {\n      emojiString += burdenEmoji;\n    }\n\n    this.texture.textSize(emojiSize);\n    this.texture.text(emojiString, 3, emojiY, this.texture.width);\n  }\n}\n\nexport default CharacterSide;\n","import CardSide from \"./CardSide\";\nimport ImageManager from \"../manager/ImageManager\";\n\nclass CharacterEndSide extends CardSide {\n  draw() {\n    this.texture.background(ImageManager.characterEnd);\n  }\n}\n\nexport default CharacterEndSide;\n","import Movable from \"../base/Movable\";\nimport Hidable from \"../base/Hidable\";\nimport Flippable from \"../base/Flippable\";\nimport Character from \"../../game/components/Character\";\nimport CharacterSide from \"./CharacterSide\";\nimport { Image } from \"p5\";\nimport CharacterEndSide from \"./CharacterEndSide\";\nimport pushPop from \"../decorators/pushPop\";\n\nconst cardWidth = 150;\nconst cardHeight = 50;\n\nclass CharacterCard extends Flippable(Hidable(Movable)) {\n  static characterEndSide: CharacterEndSide;\n\n  private readonly characterSide;\n\n  constructor(character: Character, background: Image) {\n    super(cardWidth, cardHeight);\n    this.characterSide = new CharacterSide(\n      cardWidth,\n      cardHeight,\n      background,\n      character\n    );\n  }\n\n  static initEndSide() {\n    this.characterEndSide = new CharacterEndSide(cardWidth, cardHeight);\n    this.characterEndSide.draw();\n  }\n\n  @pushPop\n  display() {\n    super.display();\n    noStroke();\n\n    this.characterSide.draw();\n    texture(this.characterSide.texture);\n\n    translate(0, 0, -0.1);\n    rect(0, 0, this.width, this.height);\n\n    texture(CharacterCard.characterEndSide.texture);\n\n    rotateX(PI);\n    translate(0, 0, 0.1);\n    rect(0, 0, this.width, this.height);\n  }\n}\n\nexport default CharacterCard;\n","import CardSide from \"./CardSide\";\nimport ImageManager from \"../manager/ImageManager\";\nimport Game from \"../../game/Game\";\n\nconst textSize = 18;\nconst textY = 21;\n\nclass ScoreSide extends CardSide {\n  draw() {\n    this.texture.background(ImageManager.score);\n    this.texture.fill(0);\n    this.texture.textFont(\"Hahmlet\");\n    this.texture.textAlign(CENTER, TOP);\n\n    const text = `${Game.tryCount}학기 ${Game.score}일차`;\n\n    this.texture.textSize(textSize);\n    this.texture.text(text, 3, textY, this.texture.width);\n  }\n}\n\nexport default ScoreSide;\n","import Movable from \"../base/Movable\";\nimport Hidable from \"../base/Hidable\";\nimport Flippable from \"../base/Flippable\";\nimport pushPop from \"../decorators/pushPop\";\nimport ScoreSide from \"./ScoreSide\";\n\nconst cardWidth = 180;\nconst cardHeight = 60;\n\nclass ScoreCard extends Flippable(Hidable(Movable)) {\n  private readonly scoreSide = new ScoreSide(cardWidth, cardHeight);\n\n  constructor() {\n    super(cardWidth, cardHeight);\n  }\n\n  @pushPop\n  display() {\n    super.display();\n    noStroke();\n\n    this.scoreSide.draw();\n    texture(this.scoreSide.texture);\n\n    rect(0, 0, this.width, this.height);\n  }\n}\n\nexport default ScoreCard;\n","import CardSide from \"./CardSide\";\nimport { Image } from \"p5\";\n\nconst textSize = 16;\nconst textLeading = 24;\nconst textY = 30;\nconst textPadding = 15;\n\nclass AnswerSide extends CardSide {\n  background?: Image;\n  text?: string;\n\n  draw() {\n    if (this.background) {\n      this.texture.background(this.background);\n    }\n\n    if (this.text) {\n      this.texture.fill(0);\n      this.texture.textFont(\"Hahmlet\");\n      this.texture.textAlign(CENTER, TOP);\n      this.texture.textWrap(WORD);\n      this.texture.textLeading(textLeading);\n      this.texture.textSize(textSize);\n      this.texture.text(\n        this.text,\n        3 + textPadding,\n        textY,\n        this.texture.width - 2 * textPadding\n      );\n    }\n  }\n}\n\nexport default AnswerSide;\n","import Hidable from \"../base/Hidable\";\nimport Movable from \"../base/Movable\";\nimport AnswerSide from \"./AnswerSide\";\nimport pushPop from \"../decorators/pushPop\";\nimport { Answer } from \"../../types/GameType\";\nimport ImageManager from \"../manager/ImageManager\";\nimport Clickable from \"../base/Clickable\";\nimport Rotatable from \"../base/Rotatable\";\nimport Flippable from \"../base/Flippable\";\n\nconst cardWidth = 200;\nconst cardHeight = 100;\n\nclass AnswerCard extends Clickable(Rotatable(Flippable(Hidable(Movable)))) {\n  private readonly answerSide = new AnswerSide(cardWidth, cardHeight);\n\n  constructor(answer: Answer, direction: \"LEFT\" | \"RIGHT\") {\n    super(cardWidth, cardHeight);\n\n    switch (direction) {\n      case \"LEFT\":\n        this.answerSide.background = ImageManager.answerLeft;\n        break;\n      case \"RIGHT\":\n        this.answerSide.background = ImageManager.answerRight;\n        break;\n    }\n    this.answerSide.text = answer.text;\n    this.answerSide.draw();\n  }\n\n  @pushPop\n  display() {\n    super.display();\n    noStroke();\n\n    texture(this.answerSide.texture);\n    rect(0, 0, this.width, this.height);\n  }\n}\n\nexport default AnswerCard;\n","import Game from \"../../game/Game\";\nimport QuestionCard from \"../components/QuestionCard\";\nimport { ClickableManager } from \"../base/Clickable\";\nimport { Answer, Effect, Target } from \"../../types/GameType\";\nimport CharacterCard from \"../components/CharacterCard\";\nimport ImageManager from \"./ImageManager\";\nimport Character from \"../../game/components/Character\";\nimport { Image } from \"p5\";\nimport ScoreCard from \"../components/ScoreCard\";\nimport AnswerCard from \"../components/AnswerCard\";\n\nconst leftDeckX = -220;\nconst rightDeckX = 220;\nconst leftDeckXSpace = 1;\nconst rightDeckXSpace = 3;\nconst cardZSpace = 3;\nconst characterXSpace = 10;\nconst topMargin = 10;\nconst scoreRightMargin = 10;\nconst answerXSpace = 10;\nconst answerY = 230;\n\ntype HidableCard = {\n  hide(\n    direction: \"LEFT\" | \"RIGHT\" | \"TOP\" | \"BOTTOM\",\n    transition: boolean\n  ): void;\n  display(): void;\n};\n\ntype CharacterData = [Character, Image];\n\nclass LayoutManager {\n  static characterCards: CharacterCard[] = [];\n  static questionCards: QuestionCard[] = [];\n  static scoreCard: ScoreCard;\n  static answerCards: AnswerCard[] = [];\n  static hidingCards: HidableCard[] = [];\n\n  static init() {\n    QuestionCard.initBackSide();\n    CharacterCard.initEndSide();\n\n    const characterData: CharacterData[] = [\n      [Game.pm, ImageManager.pm],\n      [Game.designer, ImageManager.designer],\n      [Game.developer, ImageManager.developer],\n    ];\n\n    this.characterCards = characterData.map(([character, background]) => {\n      const card = new CharacterCard(character, background);\n      card.hide(\"TOP\", false);\n      character.onRetireLayout = () => {\n        setTimeout(() => {\n          card.flip(\"TOP\");\n        }, 1000);\n      };\n      character.onResetLayout = (restart) => {\n        if (restart) {\n          card.flip(\"BOTTOM\");\n        }\n      };\n\n      return card;\n    });\n\n    this.scoreCard = new ScoreCard();\n    this.scoreCard.hide(\"TOP\", false);\n\n    LayoutManager.update();\n    Game.onCardPush = () => {\n      LayoutManager.update();\n    };\n  }\n\n  static update() {\n    this.updateCards();\n    this.updateLeftDeck(this.questionCards.slice(0, Game.cursor));\n    this.updateCurrentCard(this.questionCards[Game.cursor]);\n    this.updateRightDeck(this.questionCards.slice(Game.cursor + 1));\n    this.updateCharacters();\n    this.updateScore();\n    this.updateHidingCards();\n  }\n\n  // 중간에 끼워넣거나 덱이 바뀌는 것을 감지할 수 있도록.\n  static updateCards() {\n    let newCardCount = 0;\n    this.questionCards = Game.questions.map((question, index) => {\n      if (this.questionCards[index]?.question === question) {\n        return this.questionCards[index];\n      }\n\n      const card = new QuestionCard(question);\n      card.prepareBack();\n      card.flip(\"LEFT\", false);\n      card.hide(\"TOP\", false);\n      setTimeout(() => {\n        card.show();\n      }, 100 * newCardCount++);\n\n      if (this.questionCards[index]) {\n        this.questionCards[index].hide(\"BOTTOM\");\n        this.hidingCards.push(this.questionCards[index]);\n      }\n\n      return card;\n    });\n  }\n\n  static updateLeftDeck(cards: QuestionCard[]) {\n    for (let i = 0; i < cards.length; i++) {\n      const maxDepth = cards.length - 1;\n      const depth = maxDepth - i;\n      cards[i].set(leftDeckX - leftDeckXSpace * depth, 0, -cardZSpace * depth);\n\n      if (!cards[i].isShowingBack()) {\n        cards[i].prepareBack();\n        cards[i].flip(\"LEFT\");\n        ClickableManager.remove(this.questionCards[i]);\n        const postEffects = cards[i].question?.postEffects;\n        if (postEffects) {\n          this.runEffects(postEffects);\n        }\n      }\n    }\n  }\n\n  static updateRightDeck(cards: QuestionCard[]) {\n    for (let i = 0; i < cards.length; i++) {\n      const depth = i;\n      cards[i].set(\n        rightDeckX + rightDeckXSpace * depth,\n        0,\n        -cardZSpace * depth\n      );\n    }\n  }\n\n  static updateCurrentCard(card: QuestionCard) {\n    card.set(0, 0, 50);\n\n    if (card.isShowingBack()) {\n      setTimeout(() => {\n        card.flip(\"LEFT\");\n        if (card.question?.answers) {\n          this.updateAnswers(card.question.answers);\n        } else {\n          ClickableManager.add(card);\n          card.onClick = () => {\n            Game.pickNext();\n            LayoutManager.update();\n          };\n        }\n\n        if (card.question?.preEffects) {\n          this.runEffects(card.question.preEffects);\n        }\n      }, 500);\n    }\n  }\n\n  static updateAnswers(answers: Answer[]) {\n    for (const card of this.answerCards) {\n      card.hide(\"BOTTOM\");\n      ClickableManager.remove(card);\n      this.hidingCards.push(card);\n    }\n\n    this.answerCards = answers.map((answer, index) => {\n      const left = index === 0;\n      const aCard = new AnswerCard(answer, left ? \"LEFT\" : \"RIGHT\");\n      const x = aCard.getWidth() / 2 + answerXSpace / 2;\n      aCard.set(left ? -x : x, answerY, 0, false);\n      aCard.hide(\"BOTTOM\", false);\n      aCard.show();\n      ClickableManager.add(aCard);\n      aCard.onClick = () => {\n        this.questionCards[Game.cursor].setYRotate(0);\n        this.updateResultCard(this.questionCards[Game.cursor], answer, index);\n      };\n      aCard.onHover = () => {\n        this.questionCards[Game.cursor].setYRotate(left ? -0.2 : 0.2);\n      };\n      return aCard;\n    });\n  }\n\n  static updateResultCard(qCard: QuestionCard, answer: Answer, index: number) {\n    let burdenResult;\n    if (answer.targets && answer.burdenAmount) {\n      burdenResult = this.burdenResult(answer.targets, answer.burdenAmount);\n    }\n    qCard.setResult(answer.result, burdenResult);\n    qCard.flip(index === 0 ? \"LEFT\" : \"RIGHT\");\n\n    ClickableManager.add(qCard);\n    qCard.onClick = () => {\n      Game.pickNext();\n      LayoutManager.update();\n    };\n\n    if (answer.targets && answer.burdenAmount) {\n      Game.applyBurden(answer.targets, answer.burdenAmount);\n    }\n    this.updateAnswers([]);\n  }\n\n  static runEffects(effects: Effect[]) {\n    for (const effect of effects) {\n      switch (effect) {\n        case \"showCharacters\":\n          for (const card of this.characterCards) {\n            card.show();\n          }\n          break;\n        case \"showScore\":\n          this.scoreCard.show();\n          break;\n        case \"startMain\":\n          Game.startMain();\n          break;\n        case \"countScore\":\n          Game.startCountScore();\n          break;\n        case \"stopCountScore\":\n          Game.stopCountScore();\n          break;\n        case \"reset\":\n          Game.reset();\n          break;\n        case \"startInterlude\":\n          Game.startInterlude();\n          break;\n        case \"addTryCount\":\n          Game.addTryCount();\n          break;\n        case \"startOutro\":\n          Game.startOutro();\n          break;\n      }\n    }\n  }\n\n  static updateCharacters() {\n    for (let i = 0; i < this.characterCards.length; i++) {\n      const card = this.characterCards[i];\n      const top = -height / 2 + card.getHeight() / 2;\n      const left = -width / 2 + card.getWidth() / 2;\n      this.characterCards[i].set(\n        left + i * (card.getWidth() + characterXSpace) + characterXSpace,\n        top + topMargin,\n        0,\n        false\n      );\n    }\n  }\n\n  static updateScore() {\n    const top = -height / 2 + this.scoreCard.getHeight() / 2;\n    const right = width / 2 - this.scoreCard.getWidth() / 2;\n    this.scoreCard.set(right - scoreRightMargin, top + topMargin, 0, false);\n  }\n\n  static updateHidingCards() {\n    setTimeout(() => {\n      this.hidingCards = [];\n    }, 3000);\n  }\n\n  static display() {\n    for (const card of this.questionCards) {\n      card.display();\n    }\n    for (const card of this.characterCards) {\n      card.display();\n    }\n    this.scoreCard.display();\n    for (const card of this.answerCards) {\n      card.display();\n    }\n    for (const card of this.hidingCards) {\n      card.display();\n    }\n  }\n\n  static burdenResult(targets: Target[], burdenAmount: number) {\n    return `${targets\n      .map((target) => {\n        switch (target) {\n          case \"pm\":\n            return \"기획자\";\n          case \"designer\":\n            return \"디자이너\";\n          case \"developer\":\n            return \"개발자\";\n        }\n      })\n      .join(\", \")} 힘듦 ${\n      burdenAmount > 0 ? `+${burdenAmount}` : burdenAmount\n    }`;\n  }\n}\n\nexport default LayoutManager;\n","import { ClickableManager } from \"./display/base/Clickable\";\nimport ImageManager from \"./display/manager/ImageManager\";\nimport LayoutManager from \"./display/manager/LayoutManager\";\nimport Game from \"./game/Game\";\n\nfunction preload() {\n  ImageManager.init();\n}\n\nfunction setup() {\n  createCanvas(800, 600, WEBGL);\n  Game.init();\n  Game.startIntro();\n  LayoutManager.init();\n}\n\nfunction draw() {\n  push();\n  translate(0, 0, -100);\n  image(\n    ImageManager.background,\n    -width / 2 - 80,\n    -height / 2 - 80,\n    width + 160,\n    height + 160\n  );\n  pop();\n  ClickableManager.listenHover();\n  LayoutManager.display();\n}\n\nfunction mousePressed() {\n  ClickableManager.listenClick();\n}\n\nwindow.preload = preload;\nwindow.setup = setup;\nwindow.draw = draw;\nwindow.mousePressed = mousePressed;\n"],"names":["$caf7be09e81127c6$export$6503ec6e8aabbaf","$caf7be09e81127c6$export$f7ad0328861e2f03","$caf7be09e81127c6$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$052d86aac583e97d$export$cfcb92da21b9bca2","clickable","this","clickables","push","clickable1","filter","v","isHovered","isHoveredBefore","onHover","onHoverOut","onClick","$052d86aac583e97d$export$2e2bcd8739ae039","Base","position","super","rectMode","CENTER","display","isInside","x","y","width","height","halfWidth","halfHeight","mouseX","mouseY","pmouseX","pmouseY","$47c6148e3d70839d$exports","URL","resolve","import","meta","url","toString","$37eb51f253c17c42$exports","$870918d9c8bfcbac$exports","$eb55564f3a236326$exports","$a6260f6fc862d935$exports","$2581766504ef7e0d$exports","$1746336c706e8148$exports","$de2951804f87859f$exports","$1166a4dcccf70fd8$exports","$a25e4873bed45033$exports","$9fb0a16463f5f3b8$exports","$b563e2785a190b2a$export$2e2bcd8739ae039","background","loadImage","$parcel$interopDefault","cardBack","cardQuestion","cardResult","characterEnd","designer","developer","pm","score","answerLeft","answerRight","$c4a8129297c7d16b$export$2e2bcd8739ae039","addBurden","amount","burden","Math","max","min","burdenLimit","onRetireGame","onRetireLayout","resetBurden","prevBurden","onResetLayout","restart","name","$0ff252f41c93b4cf$exports","$8d912490a71298fa$var$Game","startBadEnding","pmBadEnding","designerBadEnding","developerBadEnding","badEnding","questions","slice","cursor","onCardPush","intro","main","shuffle","lastQuestion","preEffects","outro","interlude","tryCount","interlude1","interlude2","interlude3","interlude4","interlude5","countScore","targets","target","$8d912490a71298fa$export$2e2bcd8739ae039","property","decorators","descriptor","context","desc1","forEach","key","enumerable","configurable","initializer","writable","reverse","reduce","desc","decorator","value","call","undefined","$e51f65e624b9411f$export$2e2bcd8739ae039","xValue","fXBase","getValue","yValue","fYBase","xBump","abs","sin","PI","yBump","translate","rotateX","rotateY","move","flip","direction","transition","setAmount","side","getNewTransitionBase","$f07a950032e46d0b$export$2e2bcd8739ae039","propertykey","original","args","result","apply","pop","$34f337a3c4deac8e$export$2e2bcd8739ae039","hXBase","hYBase","xOffset","yOffset","xMargin","yMargin","hide","setValue","show","transition1","isHiding","$bd7cf28fd50475cc$export$2e2bcd8739ae039","getWidth","getHeight","$072519be64412d74$export$b410709e4ad080bf","pow","$6040b049e70db1b0$export$2e2bcd8739ae039","isTransitioning","endTransition","ease","progress","speed","$911e8ffeeae09925$export$2e2bcd8739ae039","$fea3d4f6e36e48c8$export$2e2bcd8739ae039","xBase","yBase","z","zBase","set","setX","setY","setZ","x1","y1","transition2","z1","transition3","x2","y2","z2","transition4","moveX","moveY","moveZ","xAmount","transition5","yAmount","transition6","zAmount","transition7","$fe4fd4a4cc825eec$export$2e2bcd8739ae039","setYRotate","rYBase","$c2339ad7e86330f2$export$2e2bcd8739ae039","texture","createGraphics","$6156a6389963d3b2$export$2e2bcd8739ae039","draw","fill","textFont","textAlign","TOP","textWrap","WORD","emoji","textSize","text","question","textLeading","$d9bd65506f8cc75f$export$2e2bcd8739ae039","textStyle","BOLD","$2fcd4a65ea5ab1e5$export$2e2bcd8739ae039","$ff96bb79dc7f2170$export$2e2bcd8739ae039","_class","QuestionCard","backSide","setResult","burdenResult","back","resultSide","prepareBack","front","isShowingBack","noStroke","rect","questionSide","prototype","$2415fe4da9fa0292$export$2e2bcd8739ae039","emojiString","character","$6f5787392160e576$export$2e2bcd8739ae039","$35c1d6d5f85a093f$export$2e2bcd8739ae039","CharacterCard","characterEndSide","characterSide","$093a3525c0e43ddb$export$2e2bcd8739ae039","$87d5a1e794f9fb07$export$2e2bcd8739ae039","scoreSide","$cc467889099db46a$export$2e2bcd8739ae039","$0962d17890c21547$export$2e2bcd8739ae039","answerSide","answer","$d7642680263c30c8$var$LayoutManager","initBackSide","initEndSide","characterData","characterCards","map","card","setTimeout","scoreCard","update","updateCards","updateLeftDeck","questionCards","updateCurrentCard","updateRightDeck","updateCharacters","updateScore","updateHidingCards","newCardCount","index","ref","hidingCards","cards","depth","remove","postEffects","runEffects","cards1","ref1","answers","updateAnswers","add","pickNext","answerCards","left","aCard","$d7642680263c30c8$var$answerXSpace","updateResultCard","qCard","burdenAmount","applyBurden","effects","effect","startMain","startCountScore","stopCountScore","reset","startInterlude","addTryCount","startOutro","top","right","card1","card2","card3","join","$d7642680263c30c8$export$2e2bcd8739ae039","window","preload","init","setup","createCanvas","WEBGL","startIntro","image","listenHover","mousePressed","listenClick"],"version":3,"file":"index.24b9262c.js.map"}